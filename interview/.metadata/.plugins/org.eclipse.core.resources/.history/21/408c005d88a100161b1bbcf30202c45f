package interview;

import java.util.ArrayList;
import java.util.List;

public class Solution {
	public static void main (String[] args){
		Solution solution = new Solution();
		List<String> res = solution.readBinaryWatch(8);
//		for (String re : res){
//			System.out.println(re);
//		}
	}
    public List<String> readBinaryWatch(int num) {
    	int[] comb = new int[2];
        Combines(comb,num,0);
		for (int[] combination : posComb){
			for (int i:combination){
				System.out.print(i+"-------");
				}
			System.out.println("next");
		}
        List<String> res = new ArrayList<>();
        for (int[] temp: posComb) {
            if (temp[0]<12 && temp[1]<60) {
                String s = temp[0] + ":" + temp[1];
                res.add(s);
            }
        }
        //System.out.print(posComb.size());
        return res;
    }
    
    public List<int[]> posComb = new ArrayList<>();
//    public int[] comb = new int[2];
    public int[] time = new int[] {8,4,2,1,32,16,8,4,2,1};
    
    public void Combines (int[] comb, int count, int pos) {
        if (pos>9) return;
        if (count==0) {
            posComb.add(comb);
            return;
        }
        
        for (int i=0; i<2; i++) {
            if (i==0) Combines(comb,count,pos+1);
            else {
                if (pos<4) {
                    comb[0] += time[pos];
//                    System.out.println(comb[0]);
                    Combines(comb,count-1,pos+1);
                    comb[0] -= time[pos];
//                    System.out.println(comb[0]);
                }
                else {
                    comb[1] += time[pos];
                    Combines(comb,count-1,pos+1);
                    comb[1] -= time[pos];
                }
            }
        }
    }
}
